var path = require('path');
var jade = require('jade');
var response = require('./response');
/**
 * 动态jade模板渲染函数
 *
 * @param {string} file
 * @param {object} req
 * @param {object} res
 */
module.exports = function(file,obj,req,res,config){
    var realFile = path.normalize(config.baseDir+'/view/'+file);
    //调试流程
    harbors.log("jade template:"+realFile);
    if(!req.headers['if-modified-since']||((new Date()-0)-(new Date(req.headers['if-modified-since'])-0)>config.jadeTime)){
        //超出缓存时间
        jade.renderFile(realFile, obj||{}, function (err, html) {
            if (err) {
                response.h500(res);
                harbors.err(err);
            }
            var lastModified = new Date().toUTCString();
            res.setHeader("Last-Modified", lastModified);
            res.setHeader('Content-Type', "text/html");
            response.h200(res);
            res.write(html, "binary");
            res.end();
        });
    }else{
        //还在jade缓存时间内
        response.h304(res);
    }
};