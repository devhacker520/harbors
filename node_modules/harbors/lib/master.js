var fs = require('fs');
var path = require('path');
var cluster = require('cluster');

var utils = require('./utils');

exports.checkConfig = function(config){
    require('./check')(config);
};

exports.mergeConfig = function(){
    var config = require('../default/config');
    var filePath = path.normalize(config.baseDir + '/config/config');
    if(fs.existsSync(filePath+'.js')){
        config = utils.merge(config,require(filePath));
    }else{
        console.log('User configuration file not found!');
    }
    return config;
};

var Worker = function(){//创建工作进程
    var cp = cluster.fork();
    console.log('Start - The promoter of new process. clusterid:'+cp.workerID+'. pid:'+cp.process.pid);
    cp.on('exit', function(code, signal) {
        console.log('The child process an unexpected error. Code:'+code+'.');
        //重启worker（此时进程id会增加1，以示和原错误关闭进程区别）
        console.log('Separation of new sub process process...');
        setTimeout(Worker,2000);
    });
};
exports.createWorker = function(config){
    console.log('Start - harbors Service process started,Listening port:'+config.listenPort+'.Open the process number:'+config.clusterNum);
    for(var i=0;i<config.clusterNum;i++){
        Worker();
    }
};