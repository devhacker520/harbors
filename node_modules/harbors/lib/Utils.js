/**
 * 工具集合
 */
var crypto = require('crypto');

/**
 * 合并元素a、b
 *
 * @param {Object} a
 * @param {Object} b
 * @return {Object} {a:a,b:b}
 */
exports.merge = function(a, b){
    var c = {};
    if (a && b) {
        for(var key in a){
            c[key] = a[key];
        };
        for (var key in b) {
            c[key] = b[key];
        }
    }
    return c;
};

/**
 * 计算md5的哈希值
 *
 *     utils.md5('wahoo');
 *     // => "e493298061761236c96b02ea6aa8a2ad"
 *
 * @param {String} str
 * @param {String} encoding
 * @return {String}
 * @api public
 */
exports.md5 = function(str, encoding){
    return crypto
        .createHash('md5')
        .update(str)
        .digest(encoding || 'hex');
};

/**
 * 返回随机字符串生成的uid
 *
 *     utils.uid(10);
 *     // => "FDaS435D2z"
 *
 * @param {Number} len
 * @return {String}
 * @api private
 */

exports.uid = function(len) {
    var buf = []
        , chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'
        , charlen = chars.length;

    for (var i = 0; i < len; ++i) {
        buf.push(chars[Math.random() * charlen | 0]);
    }
    return buf.join('');
};