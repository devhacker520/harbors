/**
 * 路径处理模块
 */
var path = require('path');
var querystring = require('querystring');

/**
 * 访问的控制器省略index的情况自动增加index
 * @param url
 * @returns {*}
 */
exports.completion = function(url){
    if(/\/$/.test(url))
        return url+'index';
    else
        return url;
};

/**
 * 分析，解析路径
 * @param url
 * @returns {{}}
 */
exports.analytical = function(url,module){
    var _result = {};
    var _sp = url.split('?');
    var _route = _sp[0].split('/');
    _route.shift();
    _result.route = _route;
    _result.get = _sp[1] ? querystring.parse(_sp[1]) : {};
    var zz = new RegExp(module+'$');
    _result.url = _sp[0].replace(zz,'');
    return _result;
};

/**
 * 在不存在端口号的情况下自动增加端口号
 * @param host
 * @returns {*}
 */
exports.host = function(host){
    if(/\:\d+$/.test(host))
        return host;
    else
        return host + ':80';
};

/**
 * 取得虚拟主机配置，不存在则返回undefined
 * @param host
 * @returns {*}
 */
exports.vhost = function(host,req){

    var vhost = '';
    var vhost_tmp = host;
    //逐个匹配虚拟主机
    while(vhost_tmp != vhost && !harbors.config[vhost_tmp]){
        vhost = vhost_tmp;
        vhost_tmp = harbors.utils.vhostBack(vhost_tmp);
        //console.log(vhost_tmp)
    }
    //与来路匹配的虚拟主机存在
    if(harbors.config[vhost_tmp]){
        //缓存在虚拟主机列表内
        harbors._vhost[req.headers.host] = harbors.config[vhost_tmp];
        //console.log(harbors._vhost[req.headers.host]);
        return harbors._vhost[req.headers.host];
    }
    //不存在
    return undefined;
};