var jade = require('jade');
var path = require('path');
var app = {
    render:function(file,obj){
        var _this = this;
        var vhostFile = harbors.config.vhost ? harbors.vhost[_this.req.vhost]['baseDir']+'/' : '';
        var realFile = path.normalize(harbors.config.baseDir+'/view/'+vhostFile+file);
        //调试流程
        harbors.config.deBug&&console.log("显示jade模板:"+realFile);
        if(!_this.req.headers['if-modified-since']||((new Date()-0)-(new Date(_this.req.headers['if-modified-since'])-0)>harbors.config.jadeTime)){
            //超出缓存时间
            var lastModified = new Date().toUTCString();
            _this.res.setHeader("Last-Modified", lastModified);
            jade.renderFile(realFile, obj||{}, function (err, html) {
                if (err) {
                    _this.res.writeHead(500, {'Content-Type': 'text/plain'});
                    _this.res.end("file is lost");
                    throw err;
                }
                _this.res.writeHead(200, {'Content-Type': "text/html"});
                _this.res.write(html, "binary");
                _this.res.end();
            });
        }else{
            //还在jade缓存时间内
            _this.res.writeHead(304, "Not Modified");
            _this.res.end();
        }

    }
};

module.exports = app;