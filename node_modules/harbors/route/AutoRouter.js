var harbors = require('../index');

var path = require('path');
var fs = require('fs');

harbors.AutoRouter = harbors.Router.extend({

    _workDir: null,

    _defaultFile: null,

    _notFound: null,

    ctor: function(routeTable){

        harbors.Router.prototype.ctor.call(this, routeTable);

        this._defaultFile = ['index.html'];

        this._workDir = path.join(__dirname, '../web');
    },

    /**
     * Gets the routing handler function
     *
     * @returns {Function}
     * @private
     */
    _route: function(){

        var self = this;
        var _super = harbors.Router.prototype._route.call(this);

        return function(req, res){
            var url = req.url.split('?')[0];

            var _file = path.join(self._workDir, url);

            if(/\/$/.test(url)){

                for(var i=0;i<self._defaultFile.length;i++){
                    _file = path.join(self._workDir, url, self._defaultFile[i]);
                    if(fs.existsSync(_file)){

                        self._showFile(_file, req, res);
                        return;
                    }
                }
                //self._notFound(req, res);
                _super(req, res);
            }else{

                if(fs.existsSync(_file)){

                    self._showFile(_file, req, res);
                }else{
                    //self._notFound(req, res);
                    _super(req, res);
                }
            }

        };
    },

    //TODO: ..........
    _showFile: function(file, req, res){
        harbors.throw('er');
        res.end(fs.readFileSync(file));
    },

    setWorkDir: function(path){
        if(typeof path === 'string')
            this._workDir = path;
        else
            harbors.log('setWorkDir is error');
    }

});

harbors.AutoRouter.create = function(routeTable){

    if(typeof routeTable !== 'object') routeTable = undefined;
    return new harbors.AutoRouter(routeTable);
};