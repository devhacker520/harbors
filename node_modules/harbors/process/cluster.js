var harbors = require('../index');

var cluster = require('cluster');

harbors.Cluster = harbors.Class.extend({

    _master: null,

    _worker: null,

    _workerNum: 0,

    __run: false,

    ctor: function(){

    },

    setMaster: function(handle){

        if(typeof handle === 'function') {
            this._master = handle;
        }else{
            harbors.log('setMaster error.');
        }
    },

    setWorkerNum: function(num){
        if(typeof num === 'number'){
            this._workerNum = num;
        }else{
            harbors.log('setWorkerNum is error.');
        }
    },

    setWorker: function(handle){

        if(typeof handle === 'function') {
            this._worker = handle;
        }else{
            harbors.log('setWorker error.');
        }
    },

    createWorker: function(){
        if(cluster.isMaster) {
            if(this.__run){
                cluster.fork();
            }else{
                harbors.log('createWorker must be after Cluster.run.');
            }
        }
    },

    run: function(){
        this.__run = true;
        if(cluster.isMaster){
            this._master && this._master();

            for(var i=0;i<this._workerNum;i++){
                cluster.fork();
            }

        }else{
            this._worker && this._worker();
        }
    }
});

harbors.Cluster.create = function(){

    return new harbors.Cluster();
};