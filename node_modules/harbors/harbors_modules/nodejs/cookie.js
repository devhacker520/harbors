var harbors = require('../harbors');

exports.load = function(string){
    var temp = string.split(";");
    var _cookie = {};
    for(var i= temp.length-1;i>0;i--){
        var temp_2 = temp[i].split("=");
        temp_2[0] = temp_2[0].replace(/^\s*/,'');
        _cookie[temp_2[0]] = temp_2[1]
    }
    return _cookie;
};

/**
 * cookie方法
 *
 * @param name {String|Object} cookie的名字或者是需要存入的cookie对象
 * @param value {String} cookie的值
 * @param opt {Object} cookie的扩展选项
 *     {
 *       httpOnly:false, {Boolean} 是否仅HTTP可用
 *       expires:new Date.getTime()+1000*10, {GMT_String} 过期时间，单位ms
 *       path:"/", {String} 存储路径
 *       domain:"itharbors.com", {String} 存储域名
 *       maxAge:24*3600, {Number} 过期时间，单位s
 *     }
 * @returns {*}
 */
exports.handle = function(name, value, opt){
    var self = this;
    if(opt == void 0) opt = {};
    //没有传入参数
    if(name == void 0){
        return this.__cookie;
    }

    var type = typeof(name);
    if(type == "object"){
        for(var p in name){
            self._cookie.push(p+'='+name[p]);
        }
        return this.__cookie;
    }else if(type == "string"){
        if(typeof(value) == "string"){
            var cookie_ = name+"="+value;
            if(opt.httpOnly)
                cookie_ += "; httponly";
            if(opt.express)
                cookie_ += "; expires="+opt.expires;
            if(opt.path)
                cookie_ += "; path="+opt.path;
            if(opt.domain)
                cookie_ += "; domain="+opt.domain;
            if(opt.maxAge)
                cookie_ += "; max-age="+opt.maxAge;
            harbors.log("SetCookie : ", cookie_);
            self._cookie.push(cookie_);
        }
        return self.__cookie[name]
    }
};