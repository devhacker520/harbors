var harbors = require('./harbors');

exports.master = function(){
    //定时检查session文件是否超时
    var dir_tmp = {};
    harbors._config.vhost.forEach(function(host){
        var pathDir = host['tmp_dir'] || harbors._config.server['tmp_dir'];
        if(dir_tmp[pathDir]) return void 0;
        dir_tmp[pathDir] = true//记录查找过的文件夹
        pathDir = harbors.path.join(pathDir,'session');
        harbors.log("Clear session : ", pathDir);
        var files = harbors.$file.readDir(pathDir);

        files.map(function(a){
            var path_tmp = harbors.path.join(pathDir,a);
            harbors.fs.unlink(path_tmp);
        });
    });

    var message = function(msg){
        switch(msg.type){
            case 'log':
                _m_log.write(msg);
                break;
        }
    };

    var createWorker = function(){
        var worker = harbors.cluster.fork();
        worker.on('exit', function(code, signal) {
            //重启worker（此时进程id会增加1，以示和原错误关闭进程区别）
            !worker.suicide && (harbors.log('Separation of new sub process process...'),setTimeout(createWorker,2000));
        });
        worker.on('message',function(str,f){
            try{
                str = JSON.parse(str);
            }catch(err){
                console.log(err);
            }
            message(str);
        });
    };

    harbors.log('HARBORS child_process num is '+harbors._config.server.process);

    for(var i=0;i<harbors._config.server.process;i++){
        createWorker();
    }
};