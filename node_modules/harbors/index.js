/**
 * 主程序
 */
var path = require('path');
var cluster = require('cluster');
var fs = require('fs');
var querystring = require('querystring');

global.harbors = {};
harbors.version = '0.0.1';//版本号
harbors.serverName = 'Node Harbors';//服务器名字
harbors._vhost = {};//虚拟主机映射表｛'www.baidu.com':'vhostbaidu'｝
harbors._rewrite = {};//自定义重写模块（基本路由模块）
harbors._moduleFN = {};//自定义模块存放位置

harbors.debug = function(msg){};
//harbors.debug = function(msg){console.log(msg)};

//导入工具集
harbors.utils = require('./lib/utils');

//导入服务器模块
var _l_config = require('./lib/config');
var _m_cluster = require('./module/cluster');

//配置文件处理
harbors.config = _l_config.load('./node_modules/harbors/config/config.ini');
_l_config.merge();
//console.log(harbors.config);

exports.config = function(file){
    var config = _l_config.load(file);
    harbors.utils.merge(harbors.config,config,false);
    _l_config.merge();
    //console.log(harbors.config)
};

exports.module = function(name,fn){
    if(typeof(name)=='string'&&typeof(fn)=='function')
        harbors._moduleFN[name] = fn;
    else
        console.log('require \''+name+'\' module error');
};

exports.rewrite = function(name,fn){
    if(typeof(name)=='string'&&typeof(fn)=='function')
        harbors._rewrite[name] = fn;
    else
        console.log('rewrite \''+name+'\' module error');
};

exports.start = function(){
    //开启进程集群
    if(cluster.isMaster){
        _m_cluster.master();
    }else{
        _m_cluster.worker(function(req,res){
            _m_cluster.server(req,res);
        });
    }
};
