//初始化
global.harbors = {};
var cluster = require('cluster');
var util = require('util');
var general = require('./general');
var master = require('./master');
var worker = require('./worker');
var response = require('../library/response');
var sync = require('../library/sync');

var app = {
    cluster:function(){
        //通用
        app.general();

        if (cluster.isMaster) {
            //主进程
            app.master();
        }else{
            //子进程
            app.worker();
        }

    },
    general:function(){

        //载入工具
        harbors.utils = require('../library/utils');
        //合并配置文件
        general.mergeConfig();

    },
    master:function(){

        //检查执行命令参数
        master.argv(function(){//参数允许的情况下开启web服务
            //检查配置文件
            master.checkConfig();
            //开启子进程
            master.createWorker();
        });

    },
    worker:function(){
        sync('enhance')
            .add(function(next){
                //预读modules文件夹下的所有模块
                worker.mod(next);
            })
            .add(function(next){
                //导入虚拟主机配置文件
                harbors.vhost = require('../default/vhost');
                next();
            })
            .end(function(){
                try{
                    harbors.vhost = harbors.utils.merge({},require('../../../config/vhost'));
                }catch(err){
                    util.log('User VirtualHost file not found!');
                }
                harbors.h404 = response.h404;
                //合并虚拟主机配置文件
                worker.mergeVirtualHost();
                //创建虚拟主机路由列表
                worker.createVirtualRoute();
                //创建服务对象
                worker.createServer();
            });

    }
};

module.exports = {
    cluster:app.cluster
};