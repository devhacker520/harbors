var _path_ = require('./path');
module.exports = function(req,res){
    return new request(req,res);
};

var request = function(req,res){
    harbors.log('开始封装request对象...');

    this.request = req;
    this.response = res;

    this._headers_ = {
        Server:harbors.Server,
        Version:harbors.Version
    };//缓存头信息
    this._session_ = {};//缓存session信息
    this._cookie_ = [];//缓存cookie信息
    this._statusCode_ = 500;//缓存头状态

    this.config = _path_.vhost.call(this);
    //console.log(this.config);
    this.path = _path_.path.call(this);
    //console.log(this.path);

    //载入自定义外部模块
    for(var p in harbors._module){
        this[p] = harbors._module[p];
    }
};

request.prototype = {
    constructor:request,

    get _headers(){ return this.request.headers; },
    get _ip(){ return this.request.connection.remoteAddress; },
    get _host(){ return this.request.headers.host; },
    get _url(){ return this.request.url; },

    set _headers(obj){ for(var p in obj) this._headers_[p] = obj[p]; },
    set _cookie(string){ this._cookie_.push(string); },
    set _session(obj) { for(var p in obj) this._session_[p] = obj[p]; },
    set _statusCode(num){ this._statusCode_ = num; }
};

request.prototype.send = function(string){
    harbors.log('执行send方法...');
    this._cookie = "test=123";
    this._cookie = "test2=223";
    this._headers_['Set-Cookie'] = this._cookie_;
    this.response.writeHeader(this._statusCode_,this._headers_);
    this.response.end(string);
};

request.prototype.error = function(){
    harbors.log('执行error方法...');
    this._statusCode = 500;
    this.send('error 500');
};

request.prototype.notFound = function(){
    harbors.log('执行notFound方法...');
    this._statusCode = 404;
    this.send('error 404');
};