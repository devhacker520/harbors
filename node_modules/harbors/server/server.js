var app = function(req,res) {
    return new app.fn.init(req,res);
};

app.fn = app.prototype = {
    init:function(req,res){
        var _this = this;
        this.req = req;
        this.res = res;
        //封装vhost虚拟主机名
        this.req.vhost = harbors.config.vhost ? req.headers.host.split(":")[0] : '';
        //封装display方法
        var dis = require('../lib/display');
        this.res.display = function(file){
            dis.display.call(_this,file);
        };

        return this;
    },
    staticServer:function(){
        this.res.display(this.req.url);
        return this;
    },
    dynamicServer:function(){
        var _this = this;
        var param = require('../lib/param');
        //封装访问路径以及访问文件
        this.req.route = param.route(this.req);
        //封装GET参数
        this.req.Get = param.Get(this.req);

        //封装cookie对象
        var cookie = require('../lib/cookie');
        this.req.Cookie = cookie.Cookie(this.req);
        this.res.setCookie = function(value){
            cookie.setCookie.call(_this,value);
        };
        this.res.delCookie = function(value){
            cookie.delCookie.call(_this,value);
        };

        //封装session对象
        if(harbors.config.session){
            var session = require('../lib/session');
            this.req.Session = session.Session(this.req);
            this.res.setSession = function(value){
                session.setSession.call(_this,value);
            };
            this.res.delSession = function(value){
                session.delSession.call(_this,value);
            };
        }


        //封装mysql
        if(harbors.config.mysql){
            harbors.mysql = require('../lib/database/mysql').init();
        }

        //封装jade
        if(harbors.config.jade){
            var jade = require('../lib/jade');
            _this.res.render = function(file,condition){
                jade.render.call(_this,file,condition);
            };
        }

        require(harbors.config.baseDir+'/controller' + (harbors.config.vhost ? ('/'+harbors.vhost[_this.req.vhost]['baseDir']) : '') + '/filter')(this.req,this.res);
    }
};

app.fn.init.prototype = app.fn;

module.exports = app;